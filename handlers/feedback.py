from aiogram import Router, F
from aiogram.types import Message, FSInputFile, BufferedInputFile, CallbackQuery
from aiogram.fsm.context import FSMContext

from PIL import Image, ImageDraw, ImageFont
import io

from keyboard.reply import menu
from keyboard.inline import cancel
from data.database import DB_Users as db_us
from utils.states import FeedBack
from bot import bot


router = Router()

@router.callback_query(F.data == "cancel")
async def cancel_func(callback: CallbackQuery, state: FSMContext):
    await callback.answer("")  # –£–±–∏—Ä–∞–µ–º —á–∞—Å–∏–∫–∏ —É –∫–Ω–æ–ø–∫–∏
    await callback.message.edit_text(
        "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ‚ùå",
        reply_markup=None  # –£–±–∏—Ä–∞–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )
    await callback.message.answer(
        "üè†–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:",
        reply_markup=menu  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
    )
    await state.clear()
    

@router.message(F.text == "‚ö†Ô∏è–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
async def feedback(message: Message, state: FSMContext):
    await state.set_state(FeedBack.text_msg)
    
    #–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —é–∑–µ—Ä–∞
    full_name = (message.from_user.first_name or "") + " " + (message.from_user.last_name or "")
    full_name = full_name.strip()
    if len(full_name) <= 0: full_name = "–ì–æ—Å—Ç—å"
    if len(full_name) > 26: full_name = full_name[:27] + "."
    
    username = message.from_user.username
    
    await db_us.add_user(message.from_user.id, full_name, username)
    
    # #–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    # img = Image.open("data/photo/map.png").convert("RGB")
    # buffer = io.BytesIO()
    # img.save(buffer, format="JPEG")
    # buffer.seek(0)

    # photo = BufferedInputFile(buffer.read(), filename="ticket.jpg")
    
    # await message.answer_photo(photo=photo, caption=f"–ù–∞–ø–∏—à–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é (–º–æ–∂–µ—à—å –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è, –≤—Å—ë –∞–Ω–æ–Ω–∏–º–Ω–æ:) )",
    #                            reply_markup=cancel)
    await message.answer(f"–û—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é \n(–º–æ–∂–µ—à—å –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è, –≤—Å—ë –∞–Ω–æ–Ω–∏–º–Ω–æ<tg-spoiler>, –Ω–∞–≤–µ—Ä–Ω–æ–µ))</tg-spoiler>)",
                         reply_markup=cancel)

@router.message(FeedBack.text_msg, F.text)
async def text_msg(message: Message, state: FSMContext):
    await state.update_data(text_msg=message.text)
    
    data = await state.get_data()
    await state.clear()
    
    #–ü–û–¢–û–ú –ó–ê–ú–ï–ù–ò–¢–¨ –ù–ê –ù–û–†–ú–ê–õ–¨–ù–´–ô –ì–ï–¢ –ò–ó –ë–ê–ó–´ –î–ê–ù–ù–´–•
    admin_id = 1620144806
    
    try:
        await bot.send_message(admin_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.first_name or "–ì–æ—Å—Ç—å"}, id: @{message.from_user.username}\n\n<blockquote>{data["text_msg"]}</blockquote>")
        await message.reply("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ‚úÖ\n\n–°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ!",
                        reply_markup=menu)
    except:
        await message.reply("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ‚ÄºÔ∏è",
                        reply_markup=menu)