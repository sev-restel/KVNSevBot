from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

from config import bot
from config_reader import config
from data.database import DB_Users
from keyboard.reply import menu
from keyboard.inline import adm_inl_panel

router = Router()
MAIN_ADMIN_ID = config.admin_id.get_secret_value()
APPROVE_ADMIN = "approve_adm"
REJECT_ADMIN = "reject_adm"

@router.message(Command("admin"))
async def request_admin_access(message: Message):
    user = message.from_user
    
    if await DB_Users.is_admin(user.id):
        await message.answer("–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:",
                      reply_markup=adm_inl_panel)
        return 0
    
    if not(await DB_Users.select_cell(user.id, "us_name")) and user.username:
        DB_Users.update_cell(user.id, "us_name", user.username)
    
    builder = InlineKeyboardBuilder()
    
    builder.button(
        text="‚úÖ–û–¥–æ–±—Ä–∏—Ç—å", 
        callback_data=f"{APPROVE_ADMIN}:{user.id}"
    )
    builder.button(
        text="‚ùå–û—Ç–∫–ª–æ–Ω–∏—Ç—å", 
        callback_data=f"{REJECT_ADMIN}:{user.id}"
    )
    builder.adjust(2)

    text = (
        f"‚ÄºÔ∏è–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–µ–Ω–∏–µ:\n\n"
        f"–ò–º—è: {user.full_name}\n"
        f"Username: @{user.username if user.username else '‚Äî'}\n"
        f"TG ID: {user.id}"
    )
    
    photos = await bot.get_user_profile_photos(user.id, limit=1)
    if photos.total_count > 0:
        photo = photos.photos[0][0].file_id  #–ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
        await bot.send_photo(
            chat_id=MAIN_ADMIN_ID,
            photo=photo,
            caption=text,
            reply_markup=builder.as_markup()
        )
    else:
        await bot.send_message(
            chat_id=MAIN_ADMIN_ID,
            text=text,
            reply_markup=builder.as_markup()
        )

    await message.answer("ü§ñ–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –ø–æ–¥–æ–∂–¥–∏ –ø–æ–∫–∞ –µ—ë —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç")


@router.callback_query(F.data.startswith(APPROVE_ADMIN))
async def approve_admin(callback: CallbackQuery):
    parts = callback.data.split(":")
    tg_id = int(parts[1])
    
    user = await DB_Users.select_user(tg_id)
    name, username = user[1], (user[2] if user[2] else "‚Äî")

    await DB_Users.add_admin(tg_id, name, f"{username}")
    
    if callback.message.photo:
        await callback.bot.edit_message_caption(chat_id=callback.message.chat.id,
                                                message_id=callback.message.message_id,
                                                caption=f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} (@{username}) –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω.",
                                                reply_markup=None)
    else:
        await callback.message.edit_text(
            text=f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{name}</b> (@{username}) –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω.",
            reply_markup=None
        )
    
    await callback.bot.send_message(
        chat_id=tg_id,
        text="‚úÖ–¢–≤–æ—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞\n\n<i>–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–ø–∏—à–∏ /admin</i>"
    )
    await callback.answer()

@router.callback_query(F.data.startswith(REJECT_ADMIN))
async def reject_admin(callback: CallbackQuery):
    await callback.answer()
    parts = callback.data.split(":")
    tg_id = int(parts[1])
    
    user = await DB_Users.select_user(tg_id)
    name, username = user[1], (user[2] if user[2] else "‚Äî")
    
    if callback.message.photo:
        await callback.bot.edit_message_caption(chat_id=callback.message.chat.id,
                                                message_id=callback.message.message_id,
                                                caption=f"‚ùå–ó–∞—è–≤–∫–∞ –æ—Ç {name} (@{username if username else '‚Äî'}) –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                                                reply_markup=None)
    else:
        await callback.message.edit_text(
            text=f"‚ùå–ó–∞—è–≤–∫–∞ –æ—Ç {name} (@{username if username else '‚Äî'}) –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
            reply_markup=None
        )

    await callback.bot.send_message(
        chat_id=tg_id,
        text="‚ùå–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
    )